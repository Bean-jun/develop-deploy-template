version: '3.9'

services:
  flaskapp:
    image: flasktemplate:latest
    build: .
    volumes:
      - flaskapp-data:/var/runtime/logs
    depends_on:
      - redis
      - mysql
    restart: always
    networks:
      - redis_network
      - db_network
      - nginx_network
    ports:
      - 5000:5000
  redis:
    image: redis:latest
    build: db/redis
    command: redis-server /etc/redis/redis.conf
    restart: always
    volumes:
      - redis-data:/data
    networks:
      - redis_network
    ports:
      - 6379:6379
  mysql:
    image: mysql:8.0.27
    command: '--default-authentication-plugin=mysql_native_password'
    restart: always
    env_file:
      - ./db/mysql/mysql_env
    healthcheck:
      test:
        [ "CMD","mysqladmin","ping","-h","127.0.0.1","--silent" ]
      interval: 3s
      retries: 5
      start_period: 30s
    volumes:
      - mysql-data:/var/lib/mysql
      - ./db/mysql/init:/docker-entrypoint-initdb.d/  # 挂载数据初始化sql脚本
    networks:
      - db_network
    expose:
      - 3306
  APIProxy:
    image: apiproxy:latest
    build: nginx/APIProxy
    volumes:
      - nginx-api-data:/var/log/nginx
    restart: always
    ports:
      - 5100:80
    depends_on:
      - flaskapp
    networks:
      - nginx_network
  StaticProxy:
    image: staticproxy:latest
    build: nginx/StaticProxy
    volumes:
      - nginx-static-data:/var/log/nginx
    restart: always
    ports:
      - 80:80
    depends_on:
      - APIProxy
    networks:
      - nginx_network
volumes:
  flaskapp-data:
  mysql-data:
  redis-data:
  nginx-api-data:
  nginx-static-data:
networks:
  nginx_network:
    driver: bridge
  db_network:
    driver: bridge
  redis_network:
    driver: bridge
